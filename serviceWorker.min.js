const cacheName="elektu-pwa-v0.9.1",filesToCache=["elektu/index.html","elektu/style.min.css","elektu/elektu.min.js","elektu/img/fullscreen-checked.svg","elektu/img/fullscreen-unchecked.svg","elektu/img/group-checked.svg","elektu/img/group-unchecked.svg","elektu/img/help-checked.svg","elektu/img/help-unchecked.svg","elektu/img/ordinate-checked.svg","elektu/img/ordinate-unchecked.svg","elektu/img/select-checked.svg","elektu/img/select-unchecked.svg","elektu/img/vibration-checked.svg","elektu/img/vibration-unchecked.svg","elektu/img/GitHub-Mark-Light-32px.png"];self.addEventListener("install",a=>{console.log("[Service Worker] Install"),a.waitUntil((async()=>{const a=await caches.open(cacheName);console.log("[Service Worker] Caching all: app shell and content"),await a.addAll(filesToCache)})())}),self.addEventListener("fetch",a=>{a.respondWith(caches.match(a.request).then(function(b){return b||fetch(a.request)}))}),self.addEventListener("fetch",a=>{a.respondWith((async()=>{const b=await caches.match(a.request);if(console.log(`[Service Worker] Fetching resource: ${a.request.url}`),b)return b;const c=await fetch(a.request),d=await caches.open(cacheName);return console.log(`[Service Worker] Caching new resource: ${a.request.url}`),d.put(a.request,c.clone()),c})())}),self.addEventListener("activate",a=>{a.waitUntil(caches.keys().then(a=>{Promise.all(a.map(a=>{a===cacheName||caches.delete(a)}))})())});